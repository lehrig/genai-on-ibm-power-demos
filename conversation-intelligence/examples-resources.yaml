apiVersion: v1
kind: ConfigMap
metadata:
  name: conversation-intelligence-config
data:
  env: |
    WATSONX_API_KEY=5wy6n8IBRn27vLi1wdmsxFm8krXIm_ywVZqV8MYejYA
    SERVER_URL=http://watsonx-ai-model-adapter.$CLUSTER_DOMAIN/ml/v1-beta/generation/text
    WATSONX_PROJECT_ID=power10
  app-config-properties: |
    tabtitle = Sales insights
    navbartitle = Conversation intelligence on IBM Power10
    
    layout = horizontal
    input_h_rows = 20
    input_v_rows = 4
    
    show_upload = True
    app_locked = False
    
    sample_text = 
    input_placeholder_text = To get started, type your own, or upload a conversation from a file by clicking the "Upload file" button.
    helper_text = Generated output will be displayed here on click of "Load insights into ERP" button
    generate_btn_text = Load insights into ERP
    
    # Provide actions in sequence. For Custom api call, use action=custom & update customApi.py as per need.
    generate_btn_actions = llm,llm,llm,llm
    # Provide title for each output
    generate_btn_output_labels = Summary, Call to action , Client industry focus , Key entities
    # Provide payload file name for each action
    generate_btn_payload_files = summary-payload,classification-payload1,classification-payload2,entity-payload
    # Provide output type for each action
    generate_btn_output_type = text,label,label,key-value
    
    Input_title=Sales conversation
    
    footer_text=Do not input personal data, or data that is sensitive or confidential into demo app. This app is built using the watsonx.ai SDK and may include systems and methods pending patent with the USPTO, protected under US Patent Laws. &#169; Copyright IBM Corporation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: conversation-intelligence
spec:
  selector:
    matchLabels:
      app: conversation-intelligence
  template:
    metadata:
      labels:
        app: conversation-intelligence
    spec:
      volumes:
      - name: app-config
        configMap:
          name: conversation-intelligence-config
      containers:
      - name: conversation-intelligence
        image: quay.io/ibm/ai-on-power-genai-conversation-intelligence:v0.0.1
        ports:
        - name: selfsvc-http
          containerPort: 8050
        volumeMounts:
        - name: app-config
          mountPath: "/home/jovyan/dsce-sample-apps/conversation-intelligence/.env"
          subPath: env
        - name: app-config
          mountPath: "/home/jovyan/dsce-sample-apps/conversation-intelligence/app-config.properties"
          subPath: app-config-properties
---
apiVersion: v1
kind: Service
metadata:
  name: conversation-intelligence
spec:
  selector:
    app: conversation-intelligence
  ports:
    - name: conversation-intelligence
      protocol: TCP
      port: 8050
      targetPort: selfsvc-http
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: conversation-intelligence
spec:
  host: conversation-intelligence.$CLUSTER_DOMAIN
  port:
    targetPort: conversation-intelligence
  to:
    kind: Service
    name: conversation-intelligence
    weight: 100
  wildcardPolicy: None
